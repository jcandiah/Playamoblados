@using GridMvc.Html

@model BeYourMarket.Web.Models.OrderModel

@{
	ViewBag.Title = "PendingPayment";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles {
	<link href="~/Content/Gridmvc.css" rel="stylesheet" />
	<link href="~/Content/gridmvc.datepicker.min.css" rel="stylesheet" />
}

@helper DisplayUpdateLink(int id, string userProvider, int status)
{
// Show link only in pending state
if (status == 2)
{
		<a class="btn btn-success btn-sm m-b-5" href="javascript:void(0);" onclick="confirmOrderAction(@id, 4);"><i class="fa fa-thumbs-up"></i> [[[Accept]]]</a>
		<a class="btn btn-danger btn-sm m-b-5" href="javascript:void(0);" onclick="confirmOrderAction(@id, 3);"><i class="fa fa-remove"></i> [[[Cancel]]]</a>
	}
}

@helper DisplayStatus(int status)
{
switch (status)
{
	case 0:
	case 1:
			<span class="label label-info">[[[Pending]]]</span>
		break;
	case 2:
			<span class="label label-success">[[[Pending Pay]]]</span>
		break;
	case 3:
			<span class="label label-danger">[[[Cancelled]]]</span>
		break;

	default:
			@status
		break;
}
}

@helper DisplayListing(string title, int ListingID)
{
	<a>@ListingID</a>
}

<div class="wraper container-fluid">
	<div class="row">
		<div class="col-md-12">
			<div class="panel panel-default">
				<div class="panel-heading">
					<h3 class="panel-title">[[[Pending Payments]]]</h3>
				</div>

				<div class="panel-body">
					<div class="alert alert-info">
						<p>[[[Here you can view all the transactions. Transactions is supported only when payment plugin is installed and payment method is configured.]]]</p>
					</div>


					@using (Html.BeginForm("ProfileUpdate", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
					{
						@Html.AntiForgeryToken()
						<h4><i class="fa fa-shopping-cart"></i> [[[Pending Payments]]]</h4>
						<hr />

					}

					<div class="row">
						<div class="col-md-12 col-sm-12 col-xs-12">
							@Html.Grid(Model.Grid).SetLanguage(Context.GetPrincipalAppLanguageForRequest().ToString()).EmptyText("[[[There are no items to display.]]]").Columns(columns =>
					   {
						   columns.Add()
								.Encoded(false)
								.Sanitized(false)
								.RenderValueAs(x => DisplayUpdateLink(x.ID, x.UserProvider, x.Status));

						   columns.Add(x => x.Status)
							   .Encoded(false)
							   .Sanitized(false)
							   .Titled("[[[Status]]]").RenderValueAs(x => DisplayStatus(x.Status));

						   columns.Add(x => x.Listing.Title)
							   .Encoded(false)
							   .Sanitized(false)
							   .Titled("[[[ID Property]]]").RenderValueAs(x => DisplayListing(x.Listing.Title, x.ListingID));

						   columns.Add(x => x.AspNetUserProvider.Email).Titled("[[[Owner]]]");
						   columns.Add(x => x.AspNetUserReceiver.Email).Titled("[[[Passenger]]]");

						   columns.Add(x => x.Total).Titled("[[[Value]]]");

						   columns.Add(x => x.FromDate).Titled("[[[From]]]").RenderValueAs(x => x.FromDate.Value.ToShortDateString());
						   columns.Add(x => x.ToDate).Titled("[[[To]]]").RenderValueAs(x => x.ToDate.Value.ToShortDateString());

						   columns.Add(x => x.Quantity).Titled("[[[Night]]]");

						   columns.Add(x => x.ID).Titled("[[[Order ID]]]");

						   columns.Add(x => x.Created).Titled("[[[Created]]]").RenderValueAs(x => x.Created.ToShortDateString());


					   }).WithPaging(10).Sortable().Filterable().Selectable(false)
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

@section Scripts {
	<script src="~/Scripts/gridmvc.min.js"></script>
	@Html.Partial("_LocalizationGridMvc")

	<script type="text/javascript">
	function confirmOrderAction(id, status) {
	    var message;
	    var valorentero = 1;
	    console.log(status);

	    if(status==4)
	    {
	        swal({
	            title: "OT",
	            text: "Indicar Orden de trabajo!",
                type: "input",
                showCancelButton: true,
                closeOnConfirm: false,
                inputPlaceholder: "EJ : 5"
            }, function (inputValue) {
                if (inputValue === false) return false;
                if (inputValue === "") {
                    swal.showInputError("No puede quedar el campo en blanco!");
                    return false
                }
                if(isNaN(inputValue))
                {
                    swal.showInputError("Escribir solo numeros!");
                    return false
                }

                swal("Estupendo!", "La orden de trabajo quedo en : " + inputValue, "success");

                $.post('@Url.Action("OrderActionNew", "Payment")', { id: id, status: status, ot: inputValue })
                .done(function (data) {
                    if (data.Success) {
                        location.reload();
                    } else {
                        swal("[[[Failed]]]", data.Message, "error");
                    }
                })

                //location.reload();
            });
	    }

	    if(status==3)
	    {
	        swal({
	            title: "[[[Are you sure?]]]",
	            text: "Cancelar Reserva",
	            type: "warning",
	            showCancelButton: true,
	            confirmButtonColor: "#DD6B55",
	            confirmButtonText: "[[[Yes!]]]",
	            cancelButtonText: "[[[No!]]]",
	            closeOnConfirm: false,
	            closeOnCancel: false
	        }, function (isConfirm) {
	            if (isConfirm) {
	                //swal('@Url.Action("OrderActionNew", "Payment")');
	                $.post('@Url.Action("OrderActionNew", "Payment")', { id: id, status: status, ot: '0' })
                    .done(function (data) {
                        if (data.Success) {
                            location.reload();
                        } else {
                            swal("[[[Failed]]]", data.Message, "error");
                        }
                    })
                    .fail(function (xhr, textStatus, errorThrown) {
                        swal("[[[Failed]]]", xhr.responseText, "error");
                    })
	            } else {
	                swal("[[[Cancelled]]]", "", "error");
	            }
	        });
	    }
        
	}




	</script>
}






