@using Microsoft.Practices.Unity;
@using Microsoft.Practices.Unity.Configuration;
@using Microsoft.AspNet.Identity

@model BeYourMarket.Web.Models.ListingItemModel

@{
    ViewBag.Title = Model.ListingCurrent.Title;
}

@section Styles {
    <link href="~/css/formstone/lightbox.css" rel="stylesheet" />
    <link href="~/js/timepicker/bootstrap-datepicker.min.css" rel="stylesheet" />
}

<div class="body-content">

    <div class="main-section">

        @Html.Partial("_ListingContactModal", Model)

        <div class="row">
            <div class="container-fluid">
                <div class="row">
                    @Html.Partial("_UserMessage")

                    <div class="col-md-8 col-xs-12">
                        <div class="section panel-header">
                            <div class="col-md-12">
                                <h3>
                                    ID : @Model.ListingCurrent.Title
                                    <span class="score @Model.ListingCurrent.RatingClass text-md"></span>
                                    <!-- Show edit button if administrator or the user who create the listing -->
                                    @if (Model.ListingCurrent.UserID == User.Identity.GetUserId() || User.IsInRole("Administrator"))
                                    {
                                        <a class="btn btn-primary" href="@Url.Action("ListingUpdate", "Listing", new { id = Model.ListingCurrent.ID, area = "" })"><i class="fa fa-edit"></i> [[[Edit]]]</a>
                                    }
                                </h3>

                                @if (Model.ListingCurrent.Price.HasValue)
                                {
                                    <h4>
                                        @Html.DisplayFor(x => x.ListingCurrent.PriceFormatted) @Model.ListingCurrent.ListingType.PriceUnitLabel
                                    </h4>
                                }
                                <p class="lead text-lighten">
                                    @Model.ListingCurrent.Location
                                </p>
                            </div>

                        </div>

                        <div class="panel-header bdr-b container-fluid">
                            <ul class="nav nav-tabs" role="tablist" id="mainTab">
                                <li role="presentation" class="active"><a href="#description" aria-controls="description" role="tab" data-toggle="tab"><i class="fa fa-info"></i>[[[Description]]]</a></li>
                                @if (Model.ListingCurrent.Latitude.HasValue && Model.ListingCurrent.Longitude.HasValue)
                                {
                                    <li role="presentation"><a href="#map-canvas"><i class="fa fa-map-marker"></i>[[[Maps]]]</a></li>
                                }

                                <li role="presentation">
                                    <a href="#reviewList"><i class="fa fa-star"></i>[[[Reviews]]]</a>
                                </li>

                                @*<li role="presentation">
                                        <a id="contactModal" data-toggle="modal" data-target="#contactModal"><i class="fa fa-envelope"></i>[[[Contact]]]</a>
                                    </li>*@
                            </ul>
                        </div>

                        <div class="tab-content">
                            <div role="tabpanel" class="tab-pane fade active in" id="description">
                                <div class="panel panel-default bdr-t-none">
                                    <div class="panel-body">
                                        <h4>
                                            @Model.ListingCurrent.Description
                                        </h4>
                                    </div>

                                    <!---Pictures-->
                                    @*<div class="panel-heading bdr-t">
                                            <i class="fa fa-picture-o"></i> [[[Pictures]]]
                                        </div>*@
                                    <div class="panel-body">
                                        @if (Model.Pictures.Count > 0)
                                        {
                                            <div id="carousel-gallery" class="carousel slide" data-ride="carousel">
                                                <ol class="carousel-indicators">
                                                    @for (int i = 0; i < Model.Pictures.Count; i++)
                                                    {
                                                        <li data-target="#carousel-gallery" data-slide-to="@i"></li>
                                                    }
                                                </ol>

                                                <div class="carousel-inner" role="listbox">
                                                    @for (int i = 0; i < Model.Pictures.Count; i++)
                                                    {
                                                        <div class="item @(i == 0 ? "active" : "")">
                                                            <img style="margin-left: auto; margin-right: auto;" alt="" src="@Model.Pictures[i].Url" data-holder-rendered="true">
                                                        </div>
                                                    }
                                                </div>

                                                <a class="left carousel-control" href="#carousel-gallery" role="button" data-slide="prev">
                                                    <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
                                                    <span class="sr-only">[[[Previous]]]</span>
                                                </a>
                                                <a class="right carousel-control" href="#carousel-gallery" role="button" data-slide="next">
                                                    <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
                                                    <span class="sr-only">[[[Next]]]</span>
                                                </a>

                                            </div>

                                            <div class="panel-body">
                                                <div class="row">
                                                    @foreach (var thumbnail in Model.Pictures)
                                                    {
                                                        <div class="col-xs-6 col-md-2">
                                                            <a href="@thumbnail.Url" class="boxer" title="" data-gallery="gallery" data-lightbox-gallery="photo_gallery">
                                                                <img alt="Thumbnail" src="@thumbnail.Url" style="width: 100%; display: block;">
                                                            </a>
                                                        </div>
                                                    }
                                                </div>

                                            </div>
                                        }
                                        else
                                        {
                                            <img style="width: 100%" src="@BeYourMarket.Web.Utilities.ImageHelper.GetListingImagePath(0)" />
                                        }
                                    </div>
                                    <!---Pictures-->
                                    <div class="table-responsive">
                                        <table class="table table-striped">
                                            <tbody>
                                                <tr>
                                                    <td>
                                                        [[[Condominium]]]
                                                    </td>
                                                    <td>
                                                        <a href="@Url.Action("Search", "Home", new { categoryId = Model.ListingCurrent.CategoryID })">@Model.ListingCurrent.Category.Name</a>
                                                    </td>
                                                    <td>
                                                        [[[Price]]]
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(x => Model.ListingCurrent.PriceFormatted)
                                                    </td>
                                                </tr>


                                                <tr>
                                                    <td>
                                                        [[[Location]]]
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(x => Model.ListingCurrent.Location)
                                                    </td>
                                                    <td>
                                                        [[[Type]]]
                                                    </td>
                                                    <td>
                                                        @Model.ListingCurrent.TypeOfProperty
                                                    </td>
                                                </tr>

                                                <tr>
                                                    <td>
                                                        ID
                                                    </td>
                                                    <td>
                                                        @Model.ListingCurrent.ID
                                                    </td>
                                                    <td>
                                                        [[[Rooms]]]
                                                    </td>
                                                    <td>
                                                        @Model.ListingCurrent.Rooms
                                                    </td>
                                                </tr>



                                                <tr>
                                                    <td>
                                                        [[[Capacity]]]
                                                    </td>
                                                    <td>
                                                        @Model.ListingCurrent.Max_Capacity
                                                    </td>
                                                    <td>
                                                        [[[Bathrooms]]]
                                                    </td>
                                                    <td>
                                                        @Model.ListingCurrent.Bathrooms
                                                    </td>

                                                </tr>


                                                <tr>
                                                    <td>
                                                        [[[Parking Lot]]]
                                                    </td>
                                                    <td>
                                                        @Model.ListingCurrent.ParkingLot
                                                    </td>
                                                    <td>
                                                        [[[Grill]]]
                                                    </td>
                                                    <td>
                                                        @(Model.ListingCurrent.Grill ? "Si" : "No")
                                                    </td>
                                                </tr>

                                                <tr>
                                                    <td>
                                                        [[[Safety Mesh]]]
                                                    </td>
                                                    <td>
                                                        @(Model.ListingCurrent.SafetyMesh ? "Si" : "No")
                                                    </td>
                                                    <td>
                                                        [[[Washer]]]
                                                    </td>
                                                    <td>
                                                        @(Model.ListingCurrent.Washer ? "Si" : "No")
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td>
                                                        [[[Lavavajillas]]]
                                                    </td>
                                                    <td>
                                                        @(Model.ListingCurrent.Dishwasher ? "Si" : "No")
                                                    </td>
                                                    <td>
                                                        [[[Suite Rooms]]]
                                                    </td>
                                                    <td>
                                                        @Model.ListingCurrent.Suite
                                                    </td>
                                                </tr>


                                                <tr>
                                                    <th class="bg-warning">
                                                        <h3 class="text-center"> [[[Conditions]]]</h3>
                                                    </th>
                                                    @if (Model.ListingCurrent.Smoker)
                                                    {
                                                        <td>
                                                            <img src="~/Images/Iconos/fumar.png" /> Acepta fumadores.
                                                        </td>
                                                    }
                                                    else
                                                    {
                                                        <td>
                                                            <img src="~/Images/Iconos/no-fumar.png" /> No fumadores.
                                                        </td>
                                                    }
                                                    @if (Model.ListingCurrent.Pets)
                                                    {
                                                        <td>
                                                            <img src="~/Images/Iconos/perro.png" /> Acepta animales.
                                                        </td>
                                                    }
                                                    else
                                                    {
                                                        <td>
                                                            <img src="~/Images/Iconos/no-perro.png" /> No animales.
                                                        </td>
                                                    }
                                                    <td></td>

                                                    @*<input type="button" class="btn btn-primary btn-sm" value="Ver Detalle" data-toggle="collapse" data-target="#demo"/>*@
                                                </tr>



                                                @foreach (var item in Model.ListingCurrent.ListingMetas)
                                                {
                                                    <tr>
                                                        <td>
                                                            @item.MetaField.Name
                                                        </td>
                                                        <td>
                                                            @item.Value
                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                  
            
                                                    
                                  <div class="panel">
                                      <div class="panel-header bg-inverse">
                                         <h3 class="text-center">[[[Beds]]]</h3> 
                                      </div>
                                      <div class="panel-body">
                                          @foreach (var cama in this.Model.ListBeds.OrderByDescending(x => x.ID))
                                          {
                                              <div class="col-md-4">
                                                  <i class="fa fa-bed fa-2x" aria-hidden="true">&nbsp; <strong>@cama.Quantity</strong> &nbsp; @cama.TypeOfBed.Name</i>
                                              </div>
                                          }
                                      </div>
                                  </div>                                                      
                                                 
                                                
                                    


                                    @if (Model.ListingCurrent.Latitude.HasValue && Model.ListingCurrent.Longitude.HasValue)
                                    {
                                        <div class="panel-heading bdr-t">
                                            <i class="fa fa-map-marker"></i> [[[Map]]]
                                        </div>
                                        <div class="panel-body">
                                            <div id="map-canvas"></div>
                                        </div>
                                    }
                                </div>
                            </div>

                            <div role="tabpanel" class="tab-pane" id="contact">
                                <div class="panel panel-default bdr-t-none">
                                    @if (Model.ListingCurrent.ShowPhone && !string.IsNullOrEmpty(Model.ListingCurrent.ContactPhone))
                                    {
                                        <div class="list-group">
                                            <a data-text-swap="[[[Contact number (Click to show)]]]" data-text-original="@Model.ListingCurrent.ContactPhone" class="text-swap list-group-item "><i class="mdi-hardware-phone-iphone"></i> [[[Contact number (Click to show)]]]</a>
                                            <a href="@Url.Action("Profile", "Listing", new { id = Model.ListingCurrent.UserID })" class="list-group-item"><i class="mdi-action-view-module"></i>[[[View User's other listings]]]</a>
                                        </div>
                                    }

                                    <div class="panel-heading">
                                        <span>[[[Contact]]] @Model.User.FullName</span>
                                    </div>

                                    <a id="contactModal" data-toggle="modal" data-target="#contactModal"><i class="fa fa-envelope"></i>[[[Contact]]]</a>
                                </div>
                            </div>
                        </div>

                        @Html.Partial("~/Views/Listing/_ListingReview.cshtml", Model.ListingReviews)

                        @Html.Partial("~/Views/Listing/_ListingReviewModal.cshtml", Model)

                        <!-- Listing Hook -->
                        @Html.DoAction(HookName.Listing, Model.ListingCurrent.ID)
                    </div>

                    <div>
                        <div class="col-md-4 col-xs-12">
                            <div id="sidebar" data-spy="affix" data-offset-top="120" class="affix text-center">
                                @Html.Partial("_ListingPayment", Model.ListingCurrent)
                                <script type="text/javascript" src="//static.addtoany.com/menu/page.js"></script>
                            </div>
                        </div>
                    </div>

                </div>

            </div>
        </div>
    </div>

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/js/timepicker/bootstrap-datepicker.js"></script>
    @Html.Partial("_LocalizationDatePicker")

    @Html.Partial("_LocalizationJQueryValidation")

    @{
        var datesDisabled = new System.Text.StringBuilder();
        foreach (var fromDate in Model.DatesBooked)
        {
            datesDisabled.AppendFormat("'{0}',", fromDate.ToShortDateString());
        }
    }

    <script type="text/javascript">
        $(document).ready(function () {
            $('.datepicker').datepicker({
                startDate: new Date(),
                defaultDate: new Date(),
                //daysOfWeekDisabled: "0",
                datesDisabled: [@Html.Raw(datesDisabled.ToString())],
                language: '@Context.GetPrincipalAppLanguageForRequest().ToString()'
            });
        });
    </script>


    <!-- Include Roller JS -->
    <script src="~/js/formstone/core.js"></script>
    <script src="~/js/formstone/touch.js"></script>
    <script src="~/js/formstone/transition.js"></script>
    <script src="~/js/formstone/lightbox.js"></script>

    <script>
        $(".text-swap").on("click", function () {
            var el = $(this);
            el.text() == el.data("text-swap")
              ? el.text(el.data("text-original"))
              : el.text(el.data("text-swap"));
        });
    </script>

    <script type="text/javascript">
        $(".boxer").lightbox({
            mobile: true
        });
    </script>

    @if (Model.ListingCurrent.Latitude.HasValue && Model.ListingCurrent.Longitude.HasValue)
    {
        <text>
            <script type="text/javascript">
                function initMap() {
                    var myLatlng = new google.maps.LatLng(@Model.ListingCurrent.Latitude.Value.ToString(System.Globalization.CultureInfo.InvariantCulture), @Model.ListingCurrent.Longitude.Value.ToString(System.Globalization.CultureInfo.InvariantCulture));
                    var isDraggable = $(document).width() > 480 ? true : false; // If document (your website) is wider than 480px, isDraggable = true, else isDraggable = false

                    var mapOptions = {
                        draggable: isDraggable,
                        scrollwheel: false, // Prevent users to start zooming the map when scrolling down the page
                        zoom: 14,
                        center: myLatlng
                    };

                    var map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);

                    var marker = new google.maps.Marker({
                        position: myLatlng,
                        map: map,
                        content: '@Model.ListingCurrent.Location'
                    });
                }
            </script>
        </text>
    }

    <script src="https://maps.googleapis.com/maps/api/js?signed_in=true&libraries=places&callback=initMap" async defer></script>
}
